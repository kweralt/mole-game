module manual_test (
    input clk,  // clock
    input rst,  // reset
    input io_dip [3][8], // IO Shield DIP switches
    input state_change_btn,
    
    output io_seg[8],
    output io_sel[4],
    output io_led [3][8] // IO Shield LEDs
  ) {
  
  .clk(clk) {
    button_conditioner button_cond;
    edge_detector edge (#RISE(1), #FALL(0));
    
    .rst(rst) {
      fsm state = {A, B, OUT};
      dff a[16];
      dff b[16];
      dff o[16];
      dff alufn[6];
    }
  }
  
  sig state_change;
  alu16bit alu (.alufn(alufn.q), .a(a.q), .b(b.q));

  always {
    button_cond.in = state_change_btn;
    edge.in = button_cond.out;
    state_change = edge.out;
    
    io_sel = 4b1110;
    io_seg = 8b00000000;
    
    o.d = alu.o;
    
    io_led = {8b0,8b0,8b0};
    io_led[2][5:0] = alufn.q;
    
    alufn.d = io_dip[2][5:0];
    
    case (state.q) {
    
      state.A:
        a.d = c{io_dip[1], io_dip[0]};
        io_led[1:0] = {a.q[15:8], a.q[7:0]};
        io_led[2][7:6] = 2b10;
        io_seg = 8b10001000;
        if (state_change) {
          state.d = state.B;
        }
        
      state.B:
        b.d = c{io_dip[1], io_dip[0]};
        io_led[1:0] = {b.q[15:8], b.q[7:0]};
        io_led[2][7:6] = 2b01;
        io_seg = 8b10000011;
        if (state_change) {
          state.d = state.OUT;
        }
        
      state.OUT:
        io_led[1:0] = {o.q[15:8], o.q[7:0]};
        io_led[2][7:6] = 2b11;
        io_seg = 8b11000000;
        if (state_change) {
          state.d = state.A;
        }
    
  }
}
