module alu_arithmetic (
    input alufn[4],
    input a[16],
    input b[16],
    output z,
    output v,
    output n,
    output out[16]
  ) { 
// out is write only, so s is used as temp variable.
  sig s[16];
  always {
    case (alufn){
      b0000: s=a+b; // addition
      b0001: s=a-b; // subtraction  
      b0010: s=a*b; // multiplication
      b0111:        // modulo
        if (b!=0) {
          s=a-((a/b)*b);
        } else {
          s=a;
        }
      default: s = 0;
    }
    
    z = s == 0;
    v = ( a[15] & (b[15] ^ alufn[0]) & ~s[15] ) | ( ~a[15] & ~(b[15] ^ alufn[0]) & s[15] );
    n = s[15];
    
    out = s;
  }
}